{"version":3,"sources":["components/uic/Select.js","components/uic/Modal.js","components/chart/Chart.js","components/data-analyzer/FilterForm.js","components/uic/Table.js","components/data-analyzer/Analyzer.js","components/uic/FileUpload.js","components/data-analyzer/DataAnalyzer.js","components/uic/NavBar.js","index.js"],"names":["Select","options","label","props","className","value","_","map","val","Modal","isOpen","content","header","toggle","color","onClick","noData","Highcharts","exporting","DEFAULT_OPTIONS","title","text","chart","zoomType","plotOptions","series","dataGrouping","enabled","buttons","contextButtons","Chart","chartRef","useRef","useState","modelProps","setModalProps","useEffect","get","current","container","getAttribute","setAttribute","addEventListener","evt","preventDefault","hoverPoint","pointData","Date","x","toString","slice","ref","merge","config","highcharts","constructorType","FilterFormContainer","styled","div","FilterForm","categories","onSubmit","filterState","setFilterState","col","values","onChange","persist","target","state","TableContainer","Table","df","transposeData","console","log","columns","row","idx","index","cell","SelectContainer","TopContainer","Analyzer","data","chartType","yAxis","chartSelectState","setChartSelectState","filters","setFilters","useMemo","csvData","split","d","replace","splice","dfd","csvToDf","xAxis","find","includes","lowerCase","_getXAxis","chartProps","xData","yData","date_list","date","getTime","set_index","key","inplace","y","toNumber","filter","zip","set","getChartProps","filteredDf","forEach","query","column","is","to","_filterDf","nunique","count","cat","sortBy","unique","_getCategoryData","defaultValue","point","loc","rows","T","_getPointData","FileUpload","id","type","aria-describedby","htmlFor","DataAnalyzerDiv","FileUploadDiv","DataAnalyzer","fileData","setFileData","accept","hidden","file","files","reader","FileReader","readAsBinaryString","onload","result","FixedNavbarExample","collapse","bind","this","setState","style","backgroundColor","dark","expand","href","React","Component","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46753965.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\n\nconst Select = ({\n\toptions,\n\tlabel,\n\t...props\n}) => {\n\treturn(\n\t\t<div>\n\t\t\t<select {...props} className=\"browser-default custom-select\">\n\t\t\t\t{label && <option value={false}>{label}</option>}\n\t\t\t\t{_.map(options, ({val, label}) => <option value={val}>{label}</option>)}\n\t\t\t</select>\n\t\t</div>\n\t);\n}\n\nexport default Select;","import React from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nconst Modal = ({isOpen, content, header, toggle}) => {\n\treturn (\n\t\t<MDBContainer>\n\t\t\t<MDBModal isOpen={isOpen} toggle={toggle}>\n\t\t\t\t<MDBModalHeader toggle={toggle}>{header}</MDBModalHeader>\n\t\t\t\t<MDBModalBody>\n\t\t\t\t\t{content}\n\t\t\t\t</MDBModalBody>\n\t\t        <MDBModalFooter>\n\t\t          <MDBBtn color=\"secondary\" onClick={toggle}>Close</MDBBtn>\n\t\t        </MDBModalFooter>\n\t\t\t</MDBModal>\n\t\t</MDBContainer>\n\t);\n}\n\nexport default Modal;","import React, {useRef, useEffect, useState} from 'react';\nimport _ from 'lodash';\nimport Highcharts from 'highcharts/highstock';\nimport noData from 'highcharts/modules/no-data-to-display';\nimport exporting from 'highcharts/modules/exporting';\nimport HighchartsReact from 'highcharts-react-official';\nimport Modal from '../uic/Modal';\n\nnoData(Highcharts);\nexporting(Highcharts);\n\nconst DEFAULT_OPTIONS = {\n\ttitle: {\n\t\ttext: 'Data Analysis Chart'\n\t},\n\tchart: {\n\t\tzoomType: 'x'\n\t},\n\tplotOptions: {\n\t\tseries: {\n\t\t\tdataGrouping: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t},\n\texporting: {\n\t\tbuttons: {\n\t\t\tcontextButtons: {\n\t\t\t\tenabled: true\n\t\t\t}\n\t\t}\n\t},\n\tseries: []\n}\n\nconst Chart = (props) => {\n\tconst chartRef = useRef();\n\tconst [modelProps, setModalProps] = useState({\n\t\tisOpen: false\n\t});\n\n\tuseEffect(() => {\n\t\tif (_.get(chartRef, 'current.chart')) {\n\t\t\tconst chart = chartRef.current.chart;\n\t\t\tif (chart.container.getAttribute('contextMenuEventAdded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchart.container.setAttribute('contextMenuEventAdded', true);\n\t\t\tchart.container.addEventListener('dblclick', evt => {\n\t\t\t\tevt.preventDefault();\n\t\t\t\tif (chart.hoverPoint) {\n\t\t\t\t\tconst content = props.pointData(chart.hoverPoint);\n\t\t\t\t\tsetModalProps({isOpen: true, content, header: new Date(chart.hoverPoint.x).toString().slice(0, 15)});\t\t\t\t\t\n\t\t\t\t}\n\t\t\t})\t\t\t\n\t\t}\n\t})\n\n\tconst _toggle = () => setModalProps({isOpen: false});\n\n\treturn (\n\t\t<>\n\t\t\t<Modal {...modelProps} toggle={_toggle}/>\n\t\t\t<HighchartsReact \n\t\t\t\tref={chartRef}\n\t\t\t\toptions={_.merge({}, props.config, DEFAULT_OPTIONS)} \n\t\t\t\thighcharts={Highcharts} \n\t\t\t\tconstructorType={'stockChart'}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default Chart;\t\t","import React, {useState} from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport Select from '../uic/Select';\nimport { MDBBtn } from \"mdbreact\";\n\nconst FilterFormContainer = styled.div`\n\tpadding: 20px;\n\n\theader {\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.filters {\n\t\tdisplay: flex;\n\t\tgap: 20px;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t}\n\n\tdiv {\n\t\tflex-basis: 15%;\n\t}\n\n\t.buttons {\n\t\tmargin: 20px;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n`\n\nconst FilterForm = ({categories, onSubmit}) => {\n\tconst [filterState, setFilterState] = useState({});\n\n\n\tconst _renderSelector = ({col, values}) => {\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tlabel={`Select ${col}`}\n\t\t\t\toptions={_.map(values, val => ({val, label: val}))}\n\t\t\t\tvalue={_.get(filterState, col, '')}\n\t\t\t\tonChange={(evt) => {\n\t\t\t\t\tevt.persist();\n\n\t\t\t\t\tif (evt.target.value === \"false\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetFilterState(state => ({\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\t[col]: evt.target.value\n\t\t\t\t\t}))\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<FilterFormContainer>\n\t\t\t<header>Apply Filters</header>\n\t\t\t<div className=\"filters\">\n\t\t\t\t{_.map(categories, _renderSelector)}\n\t\t\t</div>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<MDBBtn onClick={() => onSubmit(filterState)}>Submit</MDBBtn>\n\t\t\t\t<MDBBtn color=\"info\" onClick={() => setFilterState({})}>Reset</MDBBtn>\n\t\t\t</div>\n\t\t</FilterFormContainer>\n\t);\n}\n\nexport default FilterForm;","import React from 'react';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport styled from 'styled-components';\n\nconst TableContainer = styled.div`\n\tpadding: 10px;\n\tdisplay: table;\n`\n\nconst Table = ({df, transposeData}) => {\n\tconsole.log(df);\n\treturn(\n\t\t<TableContainer>\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t{_.map(df.columns, (col) => <th>{col}</th>)}\n\t\t\t\t</tr>\n\t\t\t\t{_.map(df.values, (row, idx) => (\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{df.index[idx]}</td>\n\t\t\t\t\t\t{_.map(row, cell => <td>{cell}</td>)}\n\t\t\t\t\t</tr>\n\t\t\t\t))}\n\t\t\t</table>\n\t\t</TableContainer>\n\t)\n}\n\nexport default Table;","import React, {useState, useMemo} from 'react';\nimport _ from 'lodash';\nimport Select from '../uic/Select';\nimport styled from 'styled-components';\nimport Chart from '../chart/Chart';\nimport * as dfd from \"danfojs/src/index\";\nimport FilterForm from './FilterForm';\nimport Table from '../uic/Table';\n\nconst SelectContainer = styled.div`\n\tdisplay: flex;\n\tgap: 20px;\n\talign-items: center;\n\tmargin: 20px;\n`\n\nconst TopContainer = styled.div`\n\tpadding: 20px;\n`\n\nconst csvToDf = (csvData) => {\n\tlet data = _.split(csvData, '\\n');\n\tdata = _.map(data, (d) => _.split(d, ','));\n\n\tdata = _.map(\n\t\tdata, \n\t\t(d) => _.map(d, (x) => x.replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, \"\"))\n\t)\n\n\tconst columns = data[0];\n\tdata.splice(0, 1);\n\n\tconst df = new dfd.DataFrame(data, {columns});\n\treturn df;\n}\n\nconst getChartProps = (df, {chartType, xAxis, yAxis}) => {\n\tif (!chartType || !xAxis || !yAxis || !df[yAxis]) {\n\t\treturn;\n\t}\n\n\tconst chartProps = {};\n\n\tlet xData = df[xAxis].data;\n\tlet yData = df[yAxis].data;\n\n\txData = dfd.to_datetime(df[xAxis]);\t\n\txData = _.map(xData.date_list, (date) => date.getTime());\t\n\tdf.set_index({key: xData, inplace: true});\n\n\tyData = _.map(yData, (y) => _.toNumber(y))\n\n\tconst data = _.filter(_.zip(xData, yData), ([x, y]) => y > 0);\n\n\t_.set(chartProps, 'config.series.0.data', data);\n\t_.set(chartProps, 'config.chart.type', chartType);\n\treturn chartProps;\n}\n\nconst _filterDf = (df, filters) => {\n\tlet filteredDf = df;\n\t_.forEach(filters, (val, col) => {\n\t\ttry {\n\t\t\tfilteredDf = filteredDf.query({\n\t\t\t\tcolumn: col,\n\t\t\t\tis: '==',\n\t\t\t\tto: val\n\t\t\t})\t\t\t\n\t\t} catch {}\n\t})\n\treturn filteredDf;\n}\n\nconst _getXAxis = (df) => {\n\treturn _.find(df.columns, (col) => _.includes(_.lowerCase(col), 'date'));\n}\n\nconst _getPointData = (df, point) => {\n\treturn <Table df={df.loc({rows: [point.x]}).T}  />\n}\n\nconst Analyzer = ({data}) => {\n\tconst [chartSelectState, setChartSelectState] = useState({\n\t\tchartType: 'line',\n\t\tyAxis: null\n\t})\n\tconst [filters, setFilters] = useState({});\n\n\tconst df = useMemo(() => csvToDf(data), [data]);\n\tconst xAxis = _getXAxis(df);\n\n\tif (!xAxis) {\n\t\treturn <center>No Date Column Found. Only Timeseries Data is currently supported</center>;\n\t}\n\n\tconst chartProps = getChartProps(_filterDf(df, filters), {\n\t\t...chartSelectState,\n\t\txAxis\n\t});\n\n\tconst _getCategoryData = () => {\n\t\tconst categories = _.filter(\n\t\t\tdf.columns, \n\t\t\t(col) => \n\t\t\t(df[col].nunique() * 100) / df[col].count() < 5\n\t\t)\n\n\t\treturn _.map(categories, (cat) => ({\n\t\t\tcol: cat,\n\t\t\tvalues: _.sortBy(df[cat].unique().data)\n\t\t}));\t\n\t}\n\n\treturn (\n\t\t<TopContainer>\n\t\t\t<FilterForm categories={_getCategoryData()} onSubmit={setFilters}/>\n\t\t\t<SelectContainer>\n\t\t\t\t<div>Select Chart Options: </div>\n\t\t\t\t<Select \n\t\t\t\t\toptions={[{\n\t\t\t\t\t\tlabel: 'Line',\n\t\t\t\t\t\tval: 'line'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'Column',\n\t\t\t\t\t\tval: 'column'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'Area',\n\t\t\t\t\t\tval: 'area'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'AreaSpline',\n\t\t\t\t\t\tval: 'areaspline'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'OHLC',\n\t\t\t\t\t\tval: 'OHLC'\n\t\t\t\t\t}]}\n\t\t\t\t\tdefaultValue={'line'}\n\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\tevt.persist();\n\t\t\t\t\t\tsetChartSelectState(state => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tchartType: evt.target.value\n\t\t\t\t\t\t}))\t\t\t\t\t\t\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Select \n\t\t\t\t\tlabel=\"Select Y Axis: \"\n\t\t\t\t\toptions={_.map(_.sortBy(df.columns), (val) => ({val, label: val}))}\n\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\tevt.persist();\n\t\t\t\t\t\tsetChartSelectState(state => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tyAxis: evt.target.value\n\t\t\t\t\t\t}))\t\t\t\t\t\t\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</SelectContainer>\n\t\t\t<Chart {...chartProps} pointData={(point) => _getPointData(df, point)}/>\n\t\t</TopContainer>\n\t);\n}\n\nexport default Analyzer;","import React from 'react';\n\nconst FileUpload = (props) => {\n\treturn (\n\t\t<div className=\"input-group\">\n\t\t  <div className=\"input-group-prepend\">\n\t\t    <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\n\t\t      Upload\n\t\t    </span>\n\t\t  </div>\n\t\t  <div className=\"custom-file\">\n\t\t    <input\n\t\t    \t{...props}\n\t\t      type=\"file\"\n\t\t      className=\"custom-file-input\"\n\t\t      id=\"inputGroupFile01\"\n\t\t      aria-describedby=\"inputGroupFileAddon01\"\n\t\t    />\n\t\t    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n\t\t      Choose file\n\t\t    </label>\n\t\t  </div>\n\t\t</div>\n\t)\t\n}\n\nexport default FileUpload;","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\nimport Analyzer from './Analyzer';\nimport FileUpload from '../uic/FileUpload';\nimport styled from 'styled-components';\n\nconst DataAnalyzerDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20px;\n\talign-items: center;\n\tpadding: 20px;\n`\n\nconst FileUploadDiv = styled.div`\n\twidth: 400px;\n`\n\nconst DataAnalyzer = () => {\n\tconst [fileData, setFileData] = useState(false);\n\n\tconst _handleFileUpload = (evt) => {\n\t\tconst file = evt.target.files[0];\n\t\tconst reader = new FileReader();\n\t\treader.readAsBinaryString(file);\n\t\treader.onload = (evt) => {\n\t\t\tconst csvData = evt.target.result;\n\t\t\tsetFileData(csvData);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<DataAnalyzerDiv>\n\t\t\t\t{!fileData && <h1>Upload Data</h1>}\n\t\t\t\t<FileUploadDiv>\n\t\t\t\t\t<FileUpload \n\t\t\t\t\t  \taccept=\".csv, .xlxs\"\n\t\t\t\t\t    type=\"file\"\n\t\t\t\t\t    hidden\n\t\t\t\t\t    onChange={_handleFileUpload}\n\t\t\t\t\t/>\t\t\t\t\n\t\t\t\t</FileUploadDiv>\n\t\t\t</DataAnalyzerDiv>\n\t\t\t{fileData && <Analyzer data={fileData} />}\n\t\t</>\n\t)\n}\n\nexport default DataAnalyzer;","import React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass FixedNavbarExample extends React.Component {\n\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\t\tcollapse: false,\n\t\t\t};\n\t\t\tthis.onClick = this.onClick.bind(this);\n\t}\n\n\tonClick() {\n\t\tthis.setState({\n\t\t\t\tcollapse: !this.state.collapse,\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst bgPink = {backgroundColor: 'black'}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Router>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<MDBNavbar style={bgPink} dark expand=\"md\" >\n\t\t\t\t\t\t\t<MDBNavbarBrand href=\"/\">\n\t\t\t\t\t\t\t\t\t<strong>Data Analyzer</strong>\n\t\t\t\t\t\t\t</MDBNavbarBrand>\n{/*\t\t\t\t\t\t\t<MDBNavbarToggler onClick={ this.onClick } />\n\t\t\t\t\t\t\t<MDBCollapse isOpen = { this.state.collapse } navbar>\n\t\t\t\t\t\t\t\t<MDBNavbarNav left>\n\t\t\t\t\t\t\t\t\t<MDBNavItem active>\n\t\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Home</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Features</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Pricing</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Options</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t</MDBNavbarNav>\n\t\t\t\t\t\t\t\t<MDBNavbarNav right>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\"><MDBIcon fab icon=\"facebook-f\" /></MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\"><MDBIcon fab icon=\"twitter\" /></MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\"><MDBIcon fab icon=\"instagram\" /></MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t</MDBNavbarNav>\n\t\t\t\t\t\t\t</MDBCollapse>*/}\n\t\t\t\t\t\t</MDBNavbar>\n\t\t\t\t\t</header>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FixedNavbarExample;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DataAnalyzer from './components/data-analyzer/DataAnalyzer';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport FixedNavbarExample from './components/uic/NavBar';\n\nconst Main = () => {\n\treturn (\n\t\t<>\n\t\t\t<FixedNavbarExample />\n\t\t\t<DataAnalyzer />\n\t\t</>\n\t)\n}\n\nReactDOM.render(\n\t<Main />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}