{"version":3,"sources":["components/uic/Select.js","components/chart/Chart.js","components/data-analyzer/FilterForm.js","components/data-analyzer/Analyzer.js","components/uic/FileUpload.js","components/data-analyzer/DataAnalyzer.js","components/uic/NavBar.js","index.js"],"names":["Select","options","label","props","className","value","_","map","val","noData","Highcharts","DEFAULT_OPTIONS","title","text","chart","zoomType","plotOptions","series","dataGrouping","enabled","Chart","merge","config","highcharts","constructorType","FilterFormContainer","styled","div","FilterForm","categories","onSubmit","useState","filterState","setFilterState","col","values","get","onChange","evt","persist","target","state","onClick","color","SelectContainer","TopContainer","Analyzer","data","chartType","yAxis","chartSelectState","setChartSelectState","filters","setFilters","df","useMemo","csvData","split","d","columns","x","replace","splice","dfd","csvToDf","xAxis","find","includes","lowerCase","chartProps","xData","yData","date_list","date","getTime","y","toNumber","filter","zip","set","getChartProps","filteredDf","forEach","query","column","is","to","_filterDf","nunique","count","cat","sortBy","unique","_getCategoryData","defaultValue","FileUpload","id","type","aria-describedby","htmlFor","DataAnalyzerDiv","FileUploadDiv","DataAnalyzer","fileData","setFileData","accept","hidden","file","files","reader","FileReader","readAsBinaryString","onload","result","FixedNavbarExample","collapse","bind","this","setState","style","backgroundColor","dark","expand","href","React","Component","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3c2e036.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\n\nconst Select = ({\n\toptions,\n\tlabel,\n\t...props\n}) => {\n\treturn(\n\t\t<div>\n\t\t\t<select {...props} className=\"browser-default custom-select\">\n\t\t\t\t{label && <option value={false}>{label}</option>}\n\t\t\t\t{_.map(options, ({val, label}) => <option value={val}>{label}</option>)}\n\t\t\t</select>\n\t\t</div>\n\t);\n}\n\nexport default Select;","import React, {useRef} from 'react';\nimport _ from 'lodash';\nimport Highcharts from 'highcharts/highstock';\nimport noData from 'highcharts/modules/no-data-to-display';\nimport HighchartsReact from 'highcharts-react-official';\n\nnoData(Highcharts);\n\nconst DEFAULT_OPTIONS = {\n\ttitle: {\n\t\ttext: 'Data Analysis Chart'\n\t},\n\tchart: {\n\t\tzoomType: 'x'\n\t},\n\tplotOptions: {\n\t\tseries: {\n\t\t\tdataGrouping: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t},\n\tseries: []\n}\n\nconst Chart = (props) => {\n\treturn (\n\t\t<HighchartsReact \n\t\t\toptions={_.merge({}, props.config, DEFAULT_OPTIONS)} \n\t\t\thighcharts={Highcharts} \n\t\t\tconstructorType={'stockChart'}\n\t\t/>\n\t);\n}\n\nexport default Chart;\t\t","import React, {useState} from 'react';\nimport _ from 'lodash';\nimport styled from 'styled-components';\nimport Select from '../uic/Select';\nimport { MDBBtn } from \"mdbreact\";\n\nconst FilterFormContainer = styled.div`\n\tpadding: 20px;\n\n\theader {\n\t\tmargin-bottom: 20px;\n\t}\n\n\t.filters {\n\t\tdisplay: flex;\n\t\tgap: 20px;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t}\n\n\tdiv {\n\t\tflex-basis: 15%;\n\t}\n\n\t.buttons {\n\t\tmargin: 20px;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n`\n\nconst FilterForm = ({categories, onSubmit}) => {\n\tconst [filterState, setFilterState] = useState({});\n\n\n\tconst _renderSelector = ({col, values}) => {\n\t\treturn (\n\t\t\t<Select\n\t\t\t\tlabel={`Select ${col}`}\n\t\t\t\toptions={_.map(values, val => ({val, label: val}))}\n\t\t\t\tvalue={_.get(filterState, col, '')}\n\t\t\t\tonChange={(evt) => {\n\t\t\t\t\tevt.persist();\n\n\t\t\t\t\tif (evt.target.value === \"false\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetFilterState(state => ({\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\t[col]: evt.target.value\n\t\t\t\t\t}))\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<FilterFormContainer>\n\t\t\t<header>Apply Filters</header>\n\t\t\t<div className=\"filters\">\n\t\t\t\t{_.map(categories, _renderSelector)}\n\t\t\t</div>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<MDBBtn onClick={() => onSubmit(filterState)}>Submit</MDBBtn>\n\t\t\t\t<MDBBtn color=\"info\" onClick={() => setFilterState({})}>Reset</MDBBtn>\n\t\t\t</div>\n\t\t</FilterFormContainer>\n\t);\n}\n\nexport default FilterForm;","import React, {useState, useMemo} from 'react';\nimport _ from 'lodash';\nimport Select from '../uic/Select';\nimport styled from 'styled-components';\nimport Chart from '../chart/Chart';\nimport * as dfd from \"danfojs/src/index\";\nimport FilterForm from './FilterForm';\n\nconst SelectContainer = styled.div`\n\tdisplay: flex;\n\tgap: 20px;\n\talign-items: center;\n\tmargin: 20px;\n`\n\nconst TopContainer = styled.div`\n\tpadding: 20px;\n`\n\nconst csvToDf = (csvData) => {\n\tlet data = _.split(csvData, '\\n');\n\tdata = _.map(data, (d) => _.split(d, ','));\n\n\tdata = _.map(\n\t\tdata, \n\t\t(d) => _.map(d, (x) => x.replace(/[\\u0000-\\u001F\\u007F-\\u009F]/g, \"\"))\n\t)\n\n\tconst columns = data[0];\n\tdata.splice(0, 1);\n\n\tconst df = new dfd.DataFrame(data, {columns});\n\treturn df;\n}\n\nconst getChartProps = (df, {chartType, xAxis, yAxis}) => {\n\tif (!chartType || !xAxis || !yAxis || !df[yAxis]) {\n\t\treturn;\n\t}\n\n\tconst chartProps = {};\n\n\tlet xData = df[xAxis].data;\n\tlet yData = df[yAxis].data;\n\n\txData = dfd.to_datetime(df[xAxis]);\t\n\txData = _.map(xData.date_list, (date) => date.getTime());\t\n\n\tyData = _.map(yData, (y) => _.toNumber(y))\n\n\tconst data = _.filter(_.zip(xData, yData), ([x, y]) => y > 0);\n\n\t_.set(chartProps, 'config.series.0.data', data);\n\t_.set(chartProps, 'config.chart.type', chartType);\n\treturn chartProps;\n}\n\nconst _filterDf = (df, filters) => {\n\tlet filteredDf = df;\n\t_.forEach(filters, (val, col) => {\n\t\ttry {\n\t\t\tfilteredDf = filteredDf.query({\n\t\t\t\tcolumn: col,\n\t\t\t\tis: '==',\n\t\t\t\tto: val\n\t\t\t})\t\t\t\n\t\t} catch {}\n\t})\n\treturn filteredDf;\n}\n\nconst Analyzer = ({data}) => {\n\tconst [chartSelectState, setChartSelectState] = useState({\n\t\tchartType: 'line',\n\t\tyAxis: null\n\t})\n\tconst [filters, setFilters] = useState({});\n\n\tconst df = useMemo(() => csvToDf(data), [data]);\n\tconst xAxis = _.find(df.columns, (col) => _.includes(_.lowerCase(col), 'date'));\n\n\tif (!xAxis) {\n\t\treturn <center>No Date Column Found. Only Timeseries Data is currently supported</center>;\n\t}\n\n\tconst chartProps = getChartProps(_filterDf(df, filters), {\n\t\t...chartSelectState,\n\t\txAxis\n\t});\n\n\tconst _getCategoryData = () => {\n\t\tconst categories = _.filter(\n\t\t\tdf.columns, \n\t\t\t(col) => \n\t\t\t(df[col].nunique() * 100) / df[col].count() < 5\n\t\t)\n\n\t\treturn _.map(categories, (cat) => ({\n\t\t\tcol: cat,\n\t\t\tvalues: _.sortBy(df[cat].unique().data)\n\t\t}));\t\n\t}\n\n\treturn (\n\t\t<TopContainer>\n\t\t\t<FilterForm categories={_getCategoryData()} onSubmit={setFilters}/>\n\t\t\t<SelectContainer>\n\t\t\t\t<div>Select Chart Options: </div>\n\t\t\t\t<Select \n\t\t\t\t\toptions={[{\n\t\t\t\t\t\tlabel: 'Line',\n\t\t\t\t\t\tval: 'line'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'Column',\n\t\t\t\t\t\tval: 'column'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'Area',\n\t\t\t\t\t\tval: 'area'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'AreaSpline',\n\t\t\t\t\t\tval: 'areaspline'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: 'OHLC',\n\t\t\t\t\t\tval: 'OHLC'\n\t\t\t\t\t}]}\n\t\t\t\t\tdefaultValue={'line'}\n\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\tevt.persist();\n\t\t\t\t\t\tsetChartSelectState(state => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tchartType: evt.target.value\n\t\t\t\t\t\t}))\t\t\t\t\t\t\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Select \n\t\t\t\t\tlabel=\"Select Y Axis: \"\n\t\t\t\t\toptions={_.map(_.sortBy(df.columns), (val) => ({val, label: val}))}\n\t\t\t\t\tonChange={(evt) => {\n\t\t\t\t\t\tevt.persist();\n\t\t\t\t\t\tsetChartSelectState(state => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\tyAxis: evt.target.value\n\t\t\t\t\t\t}))\t\t\t\t\t\t\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</SelectContainer>\n\t\t\t<Chart {...chartProps}/>\n\t\t</TopContainer>\n\t);\n}\n\nexport default Analyzer;","import React from 'react';\n\nconst FileUpload = (props) => {\n\treturn (\n\t\t<div className=\"input-group\">\n\t\t  <div className=\"input-group-prepend\">\n\t\t    <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\n\t\t      Upload\n\t\t    </span>\n\t\t  </div>\n\t\t  <div className=\"custom-file\">\n\t\t    <input\n\t\t    \t{...props}\n\t\t      type=\"file\"\n\t\t      className=\"custom-file-input\"\n\t\t      id=\"inputGroupFile01\"\n\t\t      aria-describedby=\"inputGroupFileAddon01\"\n\t\t    />\n\t\t    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n\t\t      Choose file\n\t\t    </label>\n\t\t  </div>\n\t\t</div>\n\t)\t\n}\n\nexport default FileUpload;","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\nimport Analyzer from './Analyzer';\nimport FileUpload from '../uic/FileUpload';\nimport styled from 'styled-components';\n\nconst DataAnalyzerDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 20px;\n\talign-items: center;\n\tpadding: 20px;\n`\n\nconst FileUploadDiv = styled.div`\n\twidth: 400px;\n`\n\nconst DataAnalyzer = () => {\n\tconst [fileData, setFileData] = useState(false);\n\n\tconst _handleFileUpload = (evt) => {\n\t\tconst file = evt.target.files[0];\n\t\tconst reader = new FileReader();\n\t\treader.readAsBinaryString(file);\n\t\treader.onload = (evt) => {\n\t\t\tconst csvData = evt.target.result;\n\t\t\tsetFileData(csvData);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<DataAnalyzerDiv>\n\t\t\t\t{!fileData && <h1>Upload Data</h1>}\n\t\t\t\t<FileUploadDiv>\n\t\t\t\t\t<FileUpload \n\t\t\t\t\t  \taccept=\".csv, .xlxs\"\n\t\t\t\t\t    type=\"file\"\n\t\t\t\t\t    hidden\n\t\t\t\t\t    onChange={_handleFileUpload}\n\t\t\t\t\t/>\t\t\t\t\n\t\t\t\t</FileUploadDiv>\n\t\t\t</DataAnalyzerDiv>\n\t\t\t{fileData && <Analyzer data={fileData} />}\n\t\t</>\n\t)\n}\n\nexport default DataAnalyzer;","import React from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass FixedNavbarExample extends React.Component {\n\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\t\tcollapse: false,\n\t\t\t};\n\t\t\tthis.onClick = this.onClick.bind(this);\n\t}\n\n\tonClick() {\n\t\tthis.setState({\n\t\t\t\tcollapse: !this.state.collapse,\n\t\t\t});\n\t}\n\n\trender() {\n\t\tconst bgPink = {backgroundColor: 'black'}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Router>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<MDBNavbar style={bgPink} dark expand=\"md\" >\n\t\t\t\t\t\t\t<MDBNavbarBrand href=\"/\">\n\t\t\t\t\t\t\t\t\t<strong>Data Analyzer</strong>\n\t\t\t\t\t\t\t</MDBNavbarBrand>\n{/*\t\t\t\t\t\t\t<MDBNavbarToggler onClick={ this.onClick } />\n\t\t\t\t\t\t\t<MDBCollapse isOpen = { this.state.collapse } navbar>\n\t\t\t\t\t\t\t\t<MDBNavbarNav left>\n\t\t\t\t\t\t\t\t\t<MDBNavItem active>\n\t\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Home</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Features</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Pricing</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\">Options</MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t</MDBNavbarNav>\n\t\t\t\t\t\t\t\t<MDBNavbarNav right>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\"><MDBIcon fab icon=\"facebook-f\" /></MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\"><MDBIcon fab icon=\"twitter\" /></MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t\t<MDBNavItem>\n\t\t\t\t\t\t\t\t\t\t<MDBNavLink to=\"#\"><MDBIcon fab icon=\"instagram\" /></MDBNavLink>\n\t\t\t\t\t\t\t\t\t</MDBNavItem>\n\t\t\t\t\t\t\t\t</MDBNavbarNav>\n\t\t\t\t\t\t\t</MDBCollapse>*/}\n\t\t\t\t\t\t</MDBNavbar>\n\t\t\t\t\t</header>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FixedNavbarExample;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DataAnalyzer from './components/data-analyzer/DataAnalyzer';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport FixedNavbarExample from './components/uic/NavBar';\n\nconst Main = () => {\n\treturn (\n\t\t<>\n\t\t\t<FixedNavbarExample />\n\t\t\t<DataAnalyzer />\n\t\t</>\n\t)\n}\n\nReactDOM.render(\n\t<Main />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}